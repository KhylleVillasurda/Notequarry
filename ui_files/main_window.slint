import { Button, VerticalBox, HorizontalBox, LineEdit, TextEdit, ListView, ScrollView } from "std-widgets.slint";

// Entry mode selection dialog
export component ModeSelectionDialog inherits Rectangle {
    callback mode-selected(string);
    callback cancel-clicked();
    width: 400px;
    height: 300px;
    background: #1e1e1e;
    border-radius: 12px;
    border-width: 1px;
    border-color: #2d5016;
    drop-shadow-blur: 20px;
    drop-shadow-color: #00000060;
    VerticalBox {
        padding: 20px;
        spacing: 15px;
        Text {
            text: "Create New Entry";
            font-size: 20px;
            font-weight: 700;
            color: #a8d08d;
            horizontal-alignment: center;
        }

        Rectangle {
            height: 1px;
            background: #2d5016;
        }

        VerticalBox {
            spacing: 10px;
            Text {
                text: "Entry Title:";
                font-size: 14px;
                color: #c5c5c5;
            }

            entry-title := LineEdit {
                placeholder-text: "Enter title...";
                font-size: 14px;
            }
        }

        VerticalBox {
            spacing: 10px;
            Text {
                text: "Select Mode:";
                font-size: 14px;
                color: #c5c5c5;
            }

            HorizontalBox {
                spacing: 15px;
                Rectangle {
                    width: 150px;
                    height: 100px;
                    border-radius: 8px;
                    border-width: 2px;
                    border-color: book-touch.has-hover ? #5a8c3a : #2d5016;
                    background: book-touch.pressed ? #2d5016 : (book-touch.has-hover ? #1a3010 : #252525);
                    book-touch := TouchArea {
                        clicked => {
                            root.mode-selected("BOOK|" + entry-title.text);
                        }
                    }

                    VerticalBox {
                        alignment: center;
                        Text {
                            text: "📚";
                            font-size: 32px;
                            horizontal-alignment: center;
                        }

                        Text {
                            text: "Book Mode";
                            font-size: 14px;
                            font-weight: 600;
                            color: #a8d08d;
                            horizontal-alignment: center;
                        }

                        Text {
                            text: "Paginated writing";
                            font-size: 11px;
                            color: #7a9b68;
                            horizontal-alignment: center;
                        }
                    }
                }

                Rectangle {
                    width: 150px;
                    height: 100px;
                    border-radius: 8px;
                    border-width: 2px;
                    border-color: note-touch.has-hover ? #5a8c3a : #2d5016;
                    background: note-touch.pressed ? #2d5016 : (note-touch.has-hover ? #1a3010 : #252525);
                    note-touch := TouchArea {
                        clicked => {
                            root.mode-selected("NOTE|" + entry-title.text);
                        }
                    }

                    VerticalBox {
                        alignment: center;
                        Text {
                            text: "📝";
                            font-size: 32px;
                            horizontal-alignment: center;
                        }

                        Text {
                            text: "Note Mode";
                            font-size: 14px;
                            font-weight: 600;
                            color: #a8d08d;
                            horizontal-alignment: center;
                        }

                        Text {
                            text: "Freeform notes";
                            font-size: 11px;
                            color: #7a9b68;
                            horizontal-alignment: center;
                        }
                    }
                }
            }
        }

        HorizontalBox {
            alignment: end;
            spacing: 10px;
            Button {
                text: "Cancel";
                clicked => {
                    root.cancel-clicked();
                }
            }
        }
    }
}

// Book mode editor component
export component BookEditor inherits Rectangle {
    in property <string> entry-title: "Untitled";
    in-out property <string> current-content: "";
    in property <int> current-page: 1;
    in property <int> total-pages: 1;
    in property <int> word-count: 0;
    callback back-clicked();
    callback save-clicked(string);
    callback previous-page();
    callback next-page();
    callback add-page();
    callback insert-image();
    background: #121212;
    VerticalBox {
        padding: 0px;
        spacing: 0px;
        
        // Header
        Rectangle {
            height: 60px;
            background: #1e1e1e;
            drop-shadow-blur: 2px;
            drop-shadow-color: #00000040;
            HorizontalBox {
                padding: 15px;
                spacing: 15px;
                Button {
                    text: "← Back";
                    clicked => {
                        root.back-clicked();
                    }
                }

                Text {
                    text: root.entry-title;
                    font-size: 18px;
                    font-weight: 700;
                    color: #a8d08d;
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }

                Rectangle {
                    horizontal-stretch: 1;
                }

                Button {
                    text: "Save";
                    primary: true;
                    clicked => {
                        root.save-clicked(content-editor.text);
                    }
                }
            }
        }
        
        // Page info bar
        Rectangle {
            height: 40px;
            background: #1a1a1a;
            HorizontalBox {
                padding: 10px;
                spacing: 20px;
                Text {
                    text: "Page " + root.current-page + " of " + root.total-pages;
                    font-size: 14px;
                    color: #c5c5c5;
                    vertical-alignment: center;
                }

                Rectangle {
                    horizontal-stretch: 1;
                }

                Text {
                    text: "Words: " + root.word-count + " / 800";
                    font-size: 14px;
                    color: root.word-count > 800 ? #ff6b6b : #7a9b68;
                    vertical-alignment: center;
                }
            }
        }
        
        // Content area
        ScrollView {
            vertical-stretch: 1;
            VerticalBox {
                padding: 30px;
                content-editor := TextEdit {
                    text: root.current-content;
                    font-size: 14px;
                    wrap: word-wrap;
                    min-height: 500px;
                }
            }
        }
        
        // Toolbar
        Rectangle {
            height: 50px;
            background: #1e1e1e;
            drop-shadow-blur: 2px;
            drop-shadow-color: #00000040;
            HorizontalBox {
                padding: 10px;
                spacing: 10px;
                Button {
                    text: "🖼️ Insert Image";
                    clicked => {
                        root.insert-image();
                    }
                }

                Rectangle {
                    horizontal-stretch: 1;
                }
            }
        }
        
        // Navigation footer
        Rectangle {
            height: 60px;
            background: #0d1f0a;
            HorizontalBox {
                padding: 15px;
                spacing: 15px;
                alignment: center;
                Button {
                    text: "◀ Previous";
                    enabled: root.current-page > 1;
                    clicked => {
                        root.previous-page();
                    }
                }

                LineEdit {
                    width: 80px;
                    text: root.current-page;
                    horizontal-alignment: center;
                }

                Button {
                    text: "Next ▶";
                    enabled: root.current-page < root.total-pages;
                    clicked => {
                        root.next-page();
                    }
                }

                Rectangle {
                    width: 20px;
                }

                Button {
                    text: "+ New Page";
                    clicked => {
                        root.add-page();
                    }
                }
            }
        }
    }
}

// Note mode editor component
export component NoteEditor inherits Rectangle {
    in property <string> entry-title: "Untitled";
    in-out property <string> current-content: "";
    callback back-clicked();
    callback save-clicked(string);
    callback add-checkbox();
    callback insert-image();
    background: #121212;
    VerticalBox {
        padding: 0px;
        spacing: 0px;
        
        // Header
        Rectangle {
            height: 60px;
            background: #1e1e1e;
            drop-shadow-blur: 2px;
            drop-shadow-color: #00000040;
            HorizontalBox {
                padding: 15px;
                spacing: 15px;
                Button {
                    text: "← Back";
                    clicked => {
                        root.back-clicked();
                    }
                }

                Text {
                    text: root.entry-title;
                    font-size: 18px;
                    font-weight: 700;
                    color: #a8d08d;
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }

                Rectangle {
                    horizontal-stretch: 1;
                }

                Button {
                    text: "Save";
                    primary: true;
                    clicked => {
                        root.save-clicked(content-editor.text);
                    }
                }
            }
        }
        
        // Toolbar
        Rectangle {
            height: 50px;
            background: #1a1a1a;
            HorizontalBox {
                padding: 10px;
                spacing: 10px;
                Button {
                    text: "☑ Add Checkbox";
                    clicked => {
                        root.add-checkbox();
                    }
                }

                Button {
                    text: "🖼️ Insert Image";
                    clicked => {
                        root.insert-image();
                    }
                }
            }
        }
        
        // Content area
        ScrollView {
            vertical-stretch: 1;
            VerticalBox {
                padding: 30px;
                content-editor := TextEdit {
                    text: root.current-content;
                    font-size: 14px;
                    wrap: word-wrap;
                    min-height: 500px;
                }
            }
        }
    }
}

// Main window
export component MainWindow inherits Window {
    title: "NoteQuarry - Your Personal Journal";
    preferred-width: 1200px;
    preferred-height: 800px;
    background: #121212;
    
    // Properties
    in-out property <[string]> entry-list: [];
    in-out property <bool> show-mode-dialog: false;
    in-out property <bool> show-book-editor: false;
    in-out property <bool> show-note-editor: false;
    in-out property <string> current-entry-title: "";
    in-out property <string> current-content: "";
    in-out property <int> current-page: 1;
    in-out property <int> total-pages: 1;
    in-out property <int> word-count: 0;
    
    // Callbacks
    callback new-entry-clicked();
    callback mode-selected(string, string);
    callback entry-selected(int);
    callback delete-entry-clicked(int);
    callback save-content(string);
    callback back-to-list();
    callback search-entries(string);
    callback page-changed(int);
    callback add-new-page();
    callback insert-image();
    callback add-checkbox();
    
    // Show main list view
    if !root.show-book-editor && !root.show-note-editor: Rectangle {
        background: #121212;
        VerticalBox {
            padding: 0px;
            spacing: 0px;
            
            // Header bar
            Rectangle {
                height: 80px;
                background: @linear-gradient(135deg, #1a3d14 0%, #2d5016 50%, #3d6b21 100%);
                drop-shadow-blur: 4px;
                drop-shadow-color: #00000050;
                HorizontalBox {
                    padding: 20px;
                    spacing: 20px;
                    Text {
                        text: "🌿 NoteQuarry";
                        font-size: 24px;
                        font-weight: 700;
                        color: #e8f5e3;
                        vertical-alignment: center;
                    }

                    Rectangle {
                        horizontal-stretch: 1;
                    }

                    search-box := LineEdit {
                        width: 300px;
                        placeholder-text: "🔍 Search entries...";
                        font-size: 14px;
                        edited => {
                            root.search-entries(self.text);
                        }
                    }

                    Button {
                        text: "+ New Entry";
                        primary: true;
                        clicked => {
                            root.new-entry-clicked();
                        }
                    }
                }
            }
            
            // Entry list
            ScrollView {
                vertical-stretch: 1;
                VerticalBox {
                    padding: 30px;
                    spacing: 15px;
                    if root.entry-list.length == 0: Rectangle {
                        height: 200px;
                        VerticalBox {
                            alignment: center;
                            spacing: 15px;
                            Text {
                                text: "🌱";
                                font-size: 48px;
                                horizontal-alignment: center;
                            }

                            Text {
                                text: "No entries yet";
                                font-size: 18px;
                                color: #7a9b68;
                                horizontal-alignment: center;
                            }

                            Text {
                                text: "Click 'New Entry' to plant your first thought";
                                font-size: 14px;
                                color: #5a7a4a;
                                horizontal-alignment: center;
                            }
                        }
                    }
                    for entry[index] in root.entry-list: Rectangle {
                        height: 80px;
                        background: entry-touch.has-hover ? #252525 : #1e1e1e;
                        border-radius: 8px;
                        border-width: 1px;
                        border-color: entry-touch.has-hover ? #3d6b21 : #2a2a2a;
                        drop-shadow-blur: entry-touch.has-hover ? 8px : 2px;
                        drop-shadow-color: entry-touch.has-hover ? #2d501630 : #00000030;
                        entry-touch := TouchArea {
                            clicked => {
                                root.entry-selected(index);
                            }
                        }

                        HorizontalBox {
                            padding: 20px;
                            spacing: 15px;
                            Text {
                                text: entry;
                                font-size: 16px;
                                color: #c5c5c5;
                                vertical-alignment: center;
                                horizontal-alignment: left;
                            }

                            Rectangle {
                                horizontal-stretch: 1;
                            }

                            Text {
                                text: "Oct 18, 2025";
                                font-size: 13px;
                                color: #7a9b68;
                                vertical-alignment: center;
                            }

                            Button {
                                text: "🗑️";
                                width: 40px;
                                clicked => {
                                    root.delete-entry-clicked(index);
                                }
                            }
                        }
                    }
                }
            }
        }
        
        // Mode selection dialog overlay
        if root.show-mode-dialog: Rectangle {
            width: 100%;
            height: 100%;
            background: #000000c0;
            TouchArea {
                clicked => {
                    root.show-mode-dialog = false;
                }
            }

            Rectangle {
                x: (parent.width - self.width) / 2;
                y: (parent.height - self.height) / 2;
                dialog := ModeSelectionDialog {
                    mode-selected(data) => {
                        root.show-mode-dialog = false;
                        root.mode-selected(data, "");
                    }
                    cancel-clicked => {
                        root.show-mode-dialog = false;
                    }
                }
            }
        }
    }
    
    // Book editor view
    if root.show-book-editor: BookEditor {
        entry-title: root.current-entry-title;
        current-content: root.current-content;
        current-page: root.current-page;
        total-pages: root.total-pages;
        word-count: root.word-count;
        back-clicked => {
            root.back-to-list();
        }
        save-clicked(content) => {
            root.save-content(content);
        }
        previous-page => {
            root.page-changed(root.current-page - 1);
        }
        next-page => {
            root.page-changed(root.current-page + 1);
        }
        add-page => {
            root.add-new-page();
        }
        insert-image => {
            root.insert-image();
        }
    }
    
    // Note editor view
    if root.show-note-editor: NoteEditor {
        entry-title: root.current-entry-title;
        current-content: root.current-content;
        back-clicked => {
            root.back-to-list();
        }
        save-clicked(content) => {
            root.save-content(content);
        }
        add-checkbox => {
            root.add-checkbox();
        }
        insert-image => {
            root.insert-image();
        }
    }
}
